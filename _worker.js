addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  if (request.method === 'POST') {
    try {
      // Ambil data dari request body
      const requestBody = await request.json();
      const { domain, password } = requestBody;

      // Validasi input
      if (!domain || !password) {
        return new Response(
          JSON.stringify({ message: 'Domain atau password tidak boleh kosong.' }),
          { status: 400, headers: { 'Content-Type': 'application/json' } }
        );
      }

      // Generate UUID
      const uuid = generateUUID();

      // Konfigurasi akun VLESS
      const vlessConfig = {
        domain: domain,
        uuid: uuid,
        port: 443,
        security: 'tls',
        path: '/vless',
        password: password,
        remarks: 'Generated by Cloudflare Worker',
      };

      // Kirim respons sukses
      return new Response(
        JSON.stringify({
          message: 'Akun VLESS berhasil dibuat!',
          vlessConfig: vlessConfig,
        }),
        { status: 200, headers: { 'Content-Type': 'application/json' } }
      );
    } catch (error) {
      return new Response(
        JSON.stringify({ message: 'Terjadi kesalahan: ' + error.message }),
        { status: 500, headers: { 'Content-Type': 'application/json' } }
      );
    }
  } else {
    // Jika metode selain POST digunakan
    return new Response(
      JSON.stringify({ message: 'Metode tidak diizinkan.' }),
      { status: 405, headers: { 'Content-Type': 'application/json' } }
    );
  }
}

// Fungsi untuk generate UUID
function generateUUID() {
  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
    const r = (Math.random() * 16) | 0,
      v = c === 'x' ? r : (r & 0x3) | 0x8;
    return v.toString(16);
  });
}
